if (Name == null || Name == "") {
    Name = virtIndexUpdate.getProperty("VirtServerIndex")
}

if (Function == "Update") {
    servIndexNew = ServiceIndexUpdate.getProperty("ServIndex"); 
    indexNew = ServiceIndexUpdate.getProperty("Index");
    var serviceId = servIndexNew + "/" + indexNew

    //call first table - update service
    var dict = [];
    if (ServicePortUpdate == 80 && PersistencyType == "4"){
        System.log("wrong type of persistency for service, setting to disabled")    
    }else {
        dict.push( {"Key":"PBind", "Value": PersistencyType} );
        if (PersistencyType == "5"){
            dict.push( {"Key":"CookieMode", "Value": 3} ); 
        }
    }
    alteonApiCall(serviceId, pathVirtualService, AlteonDevice, "PUT", dict)

    if (XFF == true) {
        servIndexNew = ServiceIndexUpdate.getProperty("ServIndex"); 
        var serviceId = servIndexNew + "/1"; 
        var dict = [];
        dict.push( {"Key":"XForwardedFor", "Value": "1"} );
        alteonApiCall(serviceId, "/config/SlbNewCfgEnhVirtServicesSixthPartTable/", AlteonDevice, "PUT", dict);
    } else {
        servIndexNew = ServiceIndexUpdate.getProperty("ServIndex"); 
        var serviceId = servIndexNew + "/1"; 
        var dict = [];
        dict.push( {"Key":"XForwardedFor", "Value": "2"} );
        alteonApiCall(serviceId, "/config/SlbNewCfgEnhVirtServicesSixthPartTable/", AlteonDevice, "PUT", dict);
    }

} else { // Function == "Create"
    servIndexNew = Name
    indexNew = 1
    var serviceId = servIndexNew + "/" + indexNew
    //call first table - create service
    var dict = [];
    dict.push( {"Key":"VirtPort", "Value": ServicePort} );
    if (ServicePort == 80 && PersistencyType == "4"){
        System.log("wrong type of persistency for service, setting to disabled")    
    }else {
        dict.push( {"Key":"PBind", "Value": PersistencyType} );
        if (PersistencyType == "5"){
        dict.push( {"Key":"CookieMode", "Value": 3} ); 
        }
    }

    alteonApiCall(serviceId, pathVirtualService, AlteonDevice, "POST", dict)
    
    // // call 5 table set application
    var dict = [];
    dict.push( {"Key":"ServApplicationType", "Value": ApplicationType} );
    dict.push( {"Key":"Name", "Value": servIndexNew} );
    alteonApiCall(serviceId,pathVirtualService5 , AlteonDevice, "PUT", dict)
    // call 7 table set group
    var dict = [];
    dict.push( {"Key":"RealGroup", "Value": GroupName} );
    alteonApiCall(serviceId,pathVirtualService7 , AlteonDevice, "PUT", dict)
    // check if ssl enabled - call 2nd table
    if ((ApplicationType == "7") && (isSslOffload) ){
        var dict = [];
        dict.push( {"Key":"SSLpol", "Value": sslPolicyName} );
        dict.push( {"Key":"ServCert", "Value": certificateName} );
        alteonApiCall(serviceId,pathVirtualService2 , AlteonDevice, "PUT", dict)
        }
    
    if (XFF) {
        var serviceId = Name + "/1";
        
        var dict = [];
        dict.push( {"Key":"XForwardedFor", "Value": "1"} );
        alteonApiCall(serviceId, "/config/SlbNewCfgEnhVirtServicesSixthPartTable/", AlteonDevice, "PUT", dict);
        }
    }

function alteonApiCall(serviceId, path, AlteonDevice, method, attributes){
    var url = path+serviceId
    var payload = ""
    //parse attributes into payload
    for each (var attribute in attributes) {
        payload += ('"'+attribute["Key"]+'": "'+attribute["Value"]+'"\n')
    }

    content = '{\n'+payload+'}'
    System.debug(content)
    actionResult = System.getModule("com.radware.alteon.pmo").AlteonRestClient(url,AlteonDevice, content, method);
}
